@using EpitomelHotel.Models;
@model PaginatedList<EpitomelHotel.Models.Bookings>

@{
    ViewData["Title"] = "Index";
}

<h1>Booking</h1>

<p>
    <a class="btn btn-primary" asp-action="Create">Create New</a>
</p>
<form asp-action="Index" method="get">

    <div class="form-actions no-color">


        <p>
            <label>Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" /></label>
            <input type="submit" value="Search" class="btn btn-outline-dark" style="color: white" /> |
            <a class="btn btn-primary" asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

@if (!Model.Any())
{
    <div class="alert alert-warning" role="alert">
        You have no bookings with this name
    </div>
}
else{

<table class="table table-bordered" style="color: white">
    <thead>
        <tr>
            <th>
                CheckIn
            </th>
            <th>
                CheckOut
            </th>
            <th>
                TotalAmount
            </th>
            <th>
                PaymentStatus
            </th>
            <th>
                Room
            </th>
            <th>
                ApplUser
            </th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CheckIn)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CheckOut)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TotalAmount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PaymentStatus)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Room.RoomType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ApplUser.Firstname)
            </td>
            <td>
                        <a class="btn btn-warning" asp-action="Edit" asp-route-id="@item.BookingID"><i class="bi bi-pencil-square"></i> Edit</a>
                        <a class="btn btn-info" asp-action="Details" asp-route-id="@item.BookingID"><i class="bi bi-info-circle"></i> Details</a>
                        <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.BookingID">
                            <i class="bi bi-trash3"></i> Delete
                        </a>

            </td>
        </tr>
}
    </tbody>
</table>
}
      
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<div class="pagination-container mt-4 d-flex justify-content-center">
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-outline-light me-2 @prevDisabled">
        <i class="bi bi-arrow-left-circle-fill"></i> Previous
    </a>

    <span class="text-light align-self-center">Page @Model.PageIndex of @Model.TotalPages</span>

    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-outline-light ms-2 @nextDisabled">
        Next <i class="bi bi-arrow-right-circle-fill"></i>
    </a>
</div>