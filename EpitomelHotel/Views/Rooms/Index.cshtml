@using EpitomelHotel.Models;
@model PaginatedList<EpitomelHotel.Models.Rooms>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            <label>Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" /></label>
            <input type="submit" value="Search" class="btn btn-outline-dark" style="color: white" | />
            <a class="btn btn-primary" asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table table-bordered" style="color: white">
    <thead>
        <tr>
            <th>
                Room Type
            </th>
            <th>
                Price
            </th>
            <th>
                Capacity
            </th>
            <th>
                Status
            </th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.RoomType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Capacity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                    <a class="btn btn-warning" asp-action="Edit" asp-route-id="@item.RoomID">Edit</a> |
                    <a class="btn btn-info" asp-action="Details" asp-route-id="@item.RoomID">Details</a> |
                    <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.RoomID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a class = "paginglink" asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
<a class="paginglink" asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-primary @nextDisabled">
    Next
</a>